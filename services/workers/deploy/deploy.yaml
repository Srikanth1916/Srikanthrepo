# Service
apiVersion: v1
kind: Service
metadata:
  name: workers
  labels:
    app: workers
    service: workers
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: workers
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workers
  labels:
    app: workers
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workers
      version: v1
  template:
    metadata:
      labels:
        app: workers
        version: v1
      annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: skyhive
      containers:
        - name: workers
          image: 157506822563.dkr.ecr.us-east-2.amazonaws.com/workers
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
#          readinessProbe:
#            httpGet:
#              path: /actuator/health/readiness
#              port: 8080
#            initialDelaySeconds: 30
#            periodSeconds: 10
#            timeoutSeconds: 3
#            failureThreshold: 1
#          livenessProbe:
#            httpGet:
#              path: /actuator/health/liveness
#              port: 8080
#            initialDelaySeconds: 60
#            periodSeconds: 10
#            timeoutSeconds: 3
#            failureThreshold: 1
          securityContext:
            runAsUser: 1000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workers
  annotations:
    konghq.com/strip-path: "true"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /workers/
            pathType: Prefix
            backend:
              service:
                name: workers
                port:
                  number: 8080
