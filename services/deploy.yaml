# Service
apiVersion: v1
kind: Service
metadata:
  name: ${project.artifactId}
  labels:
    app: ${project.artifactId}
    service: ${project.artifactId}
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: ${project.artifactId}
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app: ${project.artifactId}
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${project.artifactId}
      version: v1
  template:
    metadata:
      labels:
        app: ${project.artifactId}
        version: v1
    spec:
      serviceAccountName: skyhive
      containers:
        - name: worker
          image: 157506822563.dkr.ecr.us-east-2.amazonaws.com/${project.artifactId}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 1
          securityContext:
            runAsUser: 1000
---
# Gateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ${project.artifactId}
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
# Virtual Service
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ${project.artifactId}
spec:
  hosts:
    - "*"
  gateways:
    - ${project.artifactId}
  http:
    - match:
        - uri:
            prefix: /${project.artifactId}
      rewrite:
        uri: /
      route:
        - destination:
            host: ${project.artifactId}
            port:
              number: 8080
